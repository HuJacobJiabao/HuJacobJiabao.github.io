<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Music List 1</title>
    <url>/2022/04/16/music-list-1/</url>
    <content><![CDATA[<h1>At the Beginning</h1>
<p>Welcome to my music sharing channel🎧. It is the first blog for introducing my music list in the player on my website.</p>
<p>Staring from April 16, 2022, the music list will be “<a href="https://music.163.com/#/playlist?id=409809868">pure 17.2.10</a>”. You can find it by clicking the hyperlink.</p>
<h1>My Preference for Music</h1>
<blockquote>
<p><em>Pure music, or absolute music, is the music for its own sake—concerned only with structure, melody, harmony, and rhythm</em>.</p>
</blockquote>
<p>Literally, I pay more attention on melody or harmony, rather than the lyrics. If I would like to listen to some songs with lyrics, I prefer those I don’t understand since I don’t really care about the meaning of the songs. Therefore, I don’t often listen to Chinese songs. As for me, lyrics are something more related to literature and distract me from concentrating on “music”. Lyrics are just auxiliary tools. The impressive music can convey the emotion to audience through a single note, a chord, a modulation, a repeat, or even a pause.</p>
<h1>Nomenclature for Music List</h1>
<p>The “pure” in my music list means that it is a list for pure music, and the following number in a <em><strong>year.month.day</strong></em> format means the date that I finished collecting <strong>100</strong> songs for the list. Then I will create a new list for selected music. Currently the number of songs in some lists is smaller than 100 due to copyright.</p>
<h1>About <a href="https://music.163.com/#/playlist?id=409809868">pure 17.2.10</a></h1>
<p>Most of the songs were collected during the summer vacation after I graduated from middle school. Most of them are lyrical and quiet. Here are some special recommendations from my personal perspective,</p>
<h2 id="1-Eutopia-Yoohsic-Roomz"><a class="header-anchor" href="#1-Eutopia-Yoohsic-Roomz">🔗</a>1. Eutopia - Yoohsic Roomz</h2>
<div class="aplayer" data-id="29129889" data-server="netease" data-type="song" data-mutex="true" data-preload="auto" data-theme="#3F51B5" data-lrctype="0"></div>
<h2 id="2-Midnight-Waltz-Adam-Hurst"><a class="header-anchor" href="#2-Midnight-Waltz-Adam-Hurst">🔗</a>2. Midnight Waltz - Adam Hurst</h2>
<div class="aplayer" data-id="1070924" data-server="netease" data-type="song" data-mutex="true" data-preload="auto" data-theme="#3F51B5" data-lrctype="0"></div>
<h2 id="3-When-The-Light-Comes-Dirk-Reichardt"><a class="header-anchor" href="#3-When-The-Light-Comes-Dirk-Reichardt">🔗</a>3. When The Light Comes - Dirk Reichardt</h2>
<div class="aplayer" data-id="26624714" data-server="netease" data-type="song" data-mutex="true" data-preload="auto" data-theme="#3F51B5" data-lrctype="0"></div>
<h2 id="4-メインテーマ「永遠の一瞬」-伊藤賢治"><a class="header-anchor" href="#4-メインテーマ「永遠の一瞬」-伊藤賢治">🔗</a>4. メインテーマ「永遠の一瞬」- 伊藤賢治</h2>
<div class="aplayer" data-id="27514120" data-server="netease" data-type="song" data-mutex="true" data-preload="auto" data-theme="#3F51B5" data-lrctype="0"></div>
<h2 id="5-Promise-山岡晃"><a class="header-anchor" href="#5-Promise-山岡晃">🔗</a>5. Promise - 山岡晃</h2>
<div class="aplayer" data-id="18861490" data-server="netease" data-type="song" data-mutex="true" data-preload="auto" data-theme="#3F51B5" data-lrctype="0"></div>
<h2 id="6-花火が瞬く夜に-羽肿"><a class="header-anchor" href="#6-花火が瞬く夜に-羽肿">🔗</a>6. 花火が瞬く夜に - 羽肿</h2>
<div class="aplayer" data-id="434902428" data-server="netease" data-type="song" data-mutex="true" data-preload="auto" data-theme="#3F51B5" data-lrctype="0"></div>
<h1>In the End</h1>
<p>Hope you will enjoy these selected songs. If you like my sharing, please leave your comments and subscribe <a href="https://music.163.com/#/user/home?id=31302645">Gregor</a>. Thank you!</p>
]]></content>
      <categories>
        <category>Music</category>
        <category>Music List</category>
      </categories>
      <tags>
        <tag>Music Sharing</tag>
        <tag>Pure Music</tag>
      </tags>
  </entry>
  <entry>
    <title>Blender-Python API Meshing (1)</title>
    <url>/2022/04/16/blender-python-meshing-1/</url>
    <content><![CDATA[<h1>Blender-Python API Meshing</h1>
<h2 id="Introduction"><a class="header-anchor" href="#Introduction">🔗</a>Introduction</h2>
<blockquote>
<p><em>Blender is a free and open-source 3D computer graphics software toolset used for creating animated films, visual effects, art, 3D-printed models, motion graphics, interactive 3D applications, virtual reality, and, formerly, video games.</em></p>
</blockquote>
<p>It is a tutorial to teach you how to create mesh by Blender-Python.</p>
<p>First of all, to be able to use the Blender-Python API, you need to import the <strong>bpy</strong> library.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> bpy</span><br></pre></td></tr></tbody></table></figure>
<p>When you open your new blender python, you can find a cube in the origin. And there is only one area for operating. What we are going to do is to create two new areas.</p>
<figure>
<img src="https://raw.githubusercontent.com/HuJacobJiabao/HuJacobJiabao.github.io/main/blog/source/img/bpm1/1.jpg">
<img src="https://raw.githubusercontent.com/HuJacobJiabao/HuJacobJiabao.github.io/main/blog/source/img/bpm1/2.jpg">
<img src="https://raw.githubusercontent.com/HuJacobJiabao/HuJacobJiabao.github.io/main/blog/source/img/bpm1/3.jpg">
</figure>
And set the different regions like the figure shown below. It's my personal preferrence, you can set the region as your like. 
<img src="https://raw.githubusercontent.com/HuJacobJiabao/HuJacobJiabao.github.io/main/blog/source/img/bpm1/5.jpg">
<h3 id="Python-Console"><a class="header-anchor" href="#Python-Console">🔗</a>Python Console</h3>
<p>Let’s firstly use the python console.</p>
<figure class="highlight console"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; bpy.data.objects</span></span><br><span class="line">&lt;bpy_collection[3], BlendDataObjects&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; bpy.data.objects.keys()</span></span><br><span class="line">['Camera', 'Cube', 'Light']</span><br></pre></td></tr></tbody></table></figure>
<p>And we can assign the object <code>'Cube'</code> to a variable name <code>cube</code>. And move the cube to another position.</p>
<figure class="highlight console"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; cube = bpy.data.objects[<span class="string">'Cube'</span>]</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; cube.location</span></span><br><span class="line">Vector((0.0, 0.0, 0.0))</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; cube.location = (1, 1, 1)</span></span><br></pre></td></tr></tbody></table></figure>
<p>Then the centroid of the cube will move to <code>(1, 1, 1)</code>.<br>
<img src="https://raw.githubusercontent.com/HuJacobJiabao/HuJacobJiabao.github.io/main/blog/source/img/bpm1/6.jpg"></p>
<h3 id="Text-Editor"><a class="header-anchor" href="#Text-Editor">🔗</a>Text Editor</h3>
<p>The operations above can be done by using the script in the text editor.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> bpy</span><br><span class="line"></span><br><span class="line">cube = bpy.data.objects[<span class="string">'Cube'</span>]</span><br><span class="line">cube.location = (<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">```<span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Mesh</span></span><br><span class="line"></span><br><span class="line">In order to create mesh <span class="keyword">for</span> a desirable objects. We need to define the vertices <span class="keyword">and</span> faces.</span><br><span class="line"></span><br><span class="line"><span class="comment">### Mesh a plate</span></span><br><span class="line">Let<span class="string">'s create a plate</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">```python</span></span><br><span class="line"><span class="string">import bpy</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Select and delete all the objects</span></span><br><span class="line"><span class="string">bpy.ops.object.select_all(action = '</span>SELECT<span class="string">')</span></span><br><span class="line"><span class="string">bpy.ops.object.delete()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">vertices = [(-1, -1, 0), (1, -0, 0), (1, 1, 0), (-1, 1, 0)] # The coordinates of different vertices</span></span><br><span class="line"><span class="string">faces = [(0, 1, 2, 3)] # Only one face, so the shape is a plate.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">name = '</span>New Plate<span class="string">'</span></span><br><span class="line"><span class="string">mesh = bpy.data.meshes.new(name)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">obj = bpy.data.objects.new(name, mesh)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bpy.context.scene.collection.objects.link(obj)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mesh.from_pydata(vertices,[],faces)</span></span><br><span class="line"><span class="string">mesh.update(calc_edges=True)</span></span><br></pre></td></tr></tbody></table></figure>
<img src="https://raw.githubusercontent.com/HuJacobJiabao/HuJacobJiabao.github.io/main/blog/source/img/bpm1/7.jpg">
<h3 id="Mesh-a-3D-Supershape"><a class="header-anchor" href="#Mesh-a-3D-Supershape">🔗</a>Mesh a 3D Supershape</h3>
<h4 id="3D-Supershape"><a class="header-anchor" href="#3D-Supershape">🔗</a>3D Supershape</h4>
<p>A 3D supershape can be parameterized by the Superformula<sup><a href="#fn1" id="ref1">1</a></sup>.</p>
<blockquote>
<p><em>The superformula is a generalization of the superellipse and was proposed by Johan Gielis around 2000. Gielis suggested that the formula can be used to describe many complex shapes and curves that are found in nature. Gielis has filed a patent application related to the synthesis of patterns generated by the superformula.</em></p>
</blockquote>
<p>In polar coordinates, with <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span> the radius and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi></mrow><annotation encoding="application/x-tex">\varphi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">φ</span></span></span></span> the angle, the superformula is,</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>r</mi><mo stretchy="false">(</mo><mi>φ</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mfrac><mrow><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mfrac><mrow><mi>m</mi><mi>φ</mi></mrow><mn>4</mn></mfrac><mo stretchy="false">)</mo></mrow><mi>a</mi></mfrac><msup><mi mathvariant="normal">∣</mi><msub><mi>n</mi><mn>2</mn></msub></msup><mo>+</mo><mi mathvariant="normal">∣</mi><mfrac><mrow><mi>sin</mi><mo>⁡</mo><mo stretchy="false">(</mo><mfrac><mrow><mi>m</mi><mi>φ</mi></mrow><mn>4</mn></mfrac><mo stretchy="false">)</mo></mrow><mi>b</mi></mfrac><msup><mi mathvariant="normal">∣</mi><msub><mi>n</mi><mn>3</mn></msub></msup><msup><mo stretchy="false">)</mo><msub><mi>n</mi><mn>1</mn></msub></msup></mrow><annotation encoding="application/x-tex">r(\varphi) = (|\frac{\cos(\frac{m\varphi}4)}a|^{n_2} + |\frac{\sin(\frac{m\varphi}4)}b|^{n_3})^{n_1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal">φ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.171em;vertical-align:-0.686em;"></span><span class="mopen">(</span><span class="mord">∣</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.485em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.735em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">cos</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">φ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.171em;vertical-align:-0.686em;"></span><span class="mord">∣</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.485em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.735em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">sin</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">φ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>By changing <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>m</mi><mo separator="true">,</mo><msub><mi>n</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>n</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>n</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">a, b, m, n_1, n_2, n_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, we can get different shapes.</p>
<h4 id="Demonstration-adapted-by-THE-PROVING-GROUND-sup-a-href-fn2-id-ref2-2-a-sup"><a class="header-anchor" href="#Demonstration-adapted-by-THE-PROVING-GROUND-sup-a-href-fn2-id-ref2-2-a-sup">🔗</a>Demonstration (adapted by <em>THE PROVING GROUND</em><sup><a href="#fn2" id="ref2">2</a></sup>)</h4>
<p>Firstly, import the libraries, delete the existing objects, and then define the parameters and empty lists to store vertices, faces and edges.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> bpy</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">bpy.ops.<span class="built_in">object</span>.select_all(action = <span class="string">'SELECT'</span>)</span><br><span class="line">bpy.ops.<span class="built_in">object</span>.delete()</span><br><span class="line"><span class="comment"># mesh arrays</span></span><br><span class="line">verts = []</span><br><span class="line">faces = []</span><br><span class="line">edges = []</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Initialize 3D supershape parameters</span></span><br><span class="line">m = <span class="number">17</span></span><br><span class="line">a = -<span class="number">0.06</span></span><br><span class="line">b = <span class="number">6</span></span><br><span class="line">n1 = <span class="number">0.5</span></span><br><span class="line">n2 = -<span class="number">.48</span></span><br><span class="line">n3 = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">scale = <span class="number">3</span></span><br><span class="line"> </span><br><span class="line">Unum = <span class="number">50</span></span><br><span class="line">Vnum = <span class="number">50</span></span><br><span class="line"> </span><br><span class="line">dU = <span class="number">2</span> * np.pi / Unum</span><br><span class="line">dV = np.pi / Vnum</span><br></pre></td></tr></tbody></table></figure>
<p>Then create the vertices,</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># create vertices</span></span><br><span class="line">theta = -np.pi            <span class="comment"># Set the initial value for theta</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span> (<span class="number">0</span>, Unum + <span class="number">1</span>):</span><br><span class="line">    phi = -np.pi/<span class="number">2</span></span><br><span class="line">    r1 = <span class="number">1</span>/(((<span class="built_in">abs</span>(np.cos(m*theta/<span class="number">4</span>)/a))**n2+(<span class="built_in">abs</span>(np.sin(m*theta/<span class="number">4</span>)/b))**n3)**n1)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, Vnum + <span class="number">1</span>):</span><br><span class="line">        r2 = <span class="number">1</span>/(((<span class="built_in">abs</span>(np.cos(m*phi/<span class="number">4</span>)/a))**n2+(<span class="built_in">abs</span>(np.sin(m*phi/<span class="number">4</span>)/b))**n3)**n1)</span><br><span class="line">        x = scale * (r1 * np.cos(theta) * r2 * np.cos(phi))</span><br><span class="line">        y = scale * (r1 * np.sin(theta) * r2 * np.cos(phi))</span><br><span class="line">        z = scale * (r2 * np.sin(phi))</span><br><span class="line"> </span><br><span class="line">        vert = (x,y,z)</span><br><span class="line">        verts.append(vert)</span><br><span class="line">        <span class="comment"># update phi</span></span><br><span class="line">        phi += dV</span><br><span class="line">    <span class="comment"># update theta</span></span><br><span class="line">    theta += dU</span><br></pre></td></tr></tbody></table></figure>
<p>Create the faces, and make sure the face will not intersect.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span> (<span class="number">0</span>, (Vnum + <span class="number">1</span>) *(Unum)):</span><br><span class="line">    <span class="keyword">if</span> count &lt; Vnum:</span><br><span class="line">        A = i</span><br><span class="line">        B = i+<span class="number">1</span></span><br><span class="line">        C = (i+(Vnum+<span class="number">1</span>))+<span class="number">1</span></span><br><span class="line">        D = (i+(Vnum+<span class="number">1</span>))</span><br><span class="line"> </span><br><span class="line">        face = (A,B,C,D)</span><br><span class="line">        faces.append(face)</span><br><span class="line"> </span><br><span class="line">        count = count + <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        count = <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure>
<p>Create mesh.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">#create mesh and object</span></span><br><span class="line">mymesh = bpy.data.meshes.new(<span class="string">"supershape"</span>)</span><br><span class="line">myobject = bpy.data.objects.new(<span class="string">"supershape"</span>,mymesh)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#set mesh location</span></span><br><span class="line">myobject.location = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">bpy.context.scene.collection.objects.link(myobject)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#create mesh from python data</span></span><br><span class="line">mymesh.from_pydata(verts,edges,faces)</span><br><span class="line">mymesh.update(calc_edges=<span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<p>Then we will get a shape like that<br>
<img src="https://raw.githubusercontent.com/HuJacobJiabao/HuJacobJiabao.github.io/main/blog/source/img/bpm1/8.jpg"></p>
<p>We can also make some other operations like smoothing.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">#set the object to edit mode</span></span><br><span class="line">bpy.context.view_layer.objects.active = myobject</span><br><span class="line">bpy.ops.<span class="built_in">object</span>.mode_set(mode=<span class="string">'EDIT'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># remove duplicate vertices</span></span><br><span class="line">bpy.ops.mesh.remove_doubles() </span><br><span class="line"> </span><br><span class="line"><span class="comment"># recalculate normals</span></span><br><span class="line">bpy.ops.mesh.normals_make_consistent(inside=<span class="literal">False</span>)</span><br><span class="line">bpy.ops.<span class="built_in">object</span>.mode_set(mode=<span class="string">'OBJECT'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># subdivide modifier</span></span><br><span class="line">myobject.modifiers.new(<span class="string">"subd"</span>, <span class="built_in">type</span>=<span class="string">'SUBSURF'</span>)</span><br><span class="line">myobject.modifiers[<span class="string">'subd'</span>].levels = <span class="number">3</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># show mesh as smooth</span></span><br><span class="line">mypolys = mymesh.polygons</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> mypolys:</span><br><span class="line">    p.use_smooth = <span class="literal">True</span></span><br></pre></td></tr></tbody></table></figure>
<p>Final shape will be displayed like<br>
<img src="https://raw.githubusercontent.com/HuJacobJiabao/HuJacobJiabao.github.io/main/blog/source/img/bpm1/9.jpg"></p>
<p>You can also change the parameters to get a different shape as you want,</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">m = <span class="number">17</span></span><br><span class="line">a = -<span class="number">0.06</span></span><br><span class="line">b = <span class="number">6</span></span><br><span class="line">n1 = <span class="number">0.6</span></span><br><span class="line">n2 = -<span class="number">.6</span></span><br><span class="line">n3 = <span class="number">2</span></span><br><span class="line"> </span><br><span class="line">scale = <span class="number">3</span></span><br><span class="line"> </span><br><span class="line">Unum = <span class="number">80</span></span><br><span class="line">Vnum = <span class="number">80</span></span><br></pre></td></tr></tbody></table></figure>
<img src="https://raw.githubusercontent.com/HuJacobJiabao/HuJacobJiabao.github.io/main/blog/source/img/bpm1/10.jpg">
<hr>
<p><sup id="fn1">1. <a href="https://en.wikipedia.org/wiki/Superformula#3D_plots">https://en.wikipedia.org/wiki/Superformula#3D_plots</a><a href="#ref1" title="Jump back to footnote 1 in the text.">↩</a></sup></p>
<p><sup id="fn2">2. <a href="http://wiki.theprovingground.org/blender-py-supershape">http://wiki.theprovingground.org/blender-py-supershape</a><a href="#ref2" title="Jump back to footnote 2 in the text.">↩</a></sup></p>
]]></content>
      <categories>
        <category>Blender</category>
      </categories>
      <tags>
        <tag>Blender</tag>
        <tag>Python</tag>
        <tag>Modelling</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/04/21/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a class="header-anchor" href="#Quick-Start">🔗</a>Quick Start</h2>
<h3 id="Create-a-new-post"><a class="header-anchor" href="#Create-a-new-post">🔗</a>Create a new post</h3>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a class="header-anchor" href="#Run-server">🔗</a>Run server</h3>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure>
<p>or</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></tbody></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a class="header-anchor" href="#Generate-static-files">🔗</a>Generate static files</h3>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure>
<p>or</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></tbody></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a class="header-anchor" href="#Deploy-to-remote-sites">🔗</a>Deploy to remote sites</h3>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure>
<p>or</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></tbody></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Beautify Post by Tag Plugins</title>
    <url>/2022/04/18/htmlcodes/</url>
    <content><![CDATA[<h1>Why I Create This Post</h1>
<p>Using Markdown can help us get a clear website without the knowledge of HTML. There’s still several shortages that Markdown’s functions are limited compared to HTML. I am also a beginner, so I just try to collect some useful codes for decorating my website pages.</p>
<p>But firstly, we can see that quoting by Markdown syntax can beautify the page.</p>
<h2 id="Quoting"><a class="header-anchor" href="#Quoting">🔗</a>Quoting</h2>
<figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line"><span class="quote">&gt; It's a quoting demonstration.</span></span><br></pre></td></tr></tbody></table></figure>
<blockquote>
<p>It’s a quoting demonstration.</p>
</blockquote>
<p>In the hexo-butterfly theme, the quotation has a blue background. It makes some contents from others distinct from your own ideas.</p>
<h1>Tag Plugins</h1>
<p>The next part is for introducing some colorful text boxes to beautify the website.</p>
<div class="note red icon flat"><i class="note-icon fa-solid fa-circle-exclamation"></i><p>What you need to pay attention to is that the following content may <strong>NOT work</strong> for themes other than <strong>hexo-butterfly</strong>, and it is only available in <strong><i>Hexo</i>.</strong></p></div>
<p>The general grammar to create the tag plugins is</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span> = <span class="string">"note [color] [class] [icon-choices] [style]"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>PUT YOUR CONTENT HERE<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<table>
<thead>
<tr>
<th>Name</th>
<th>value</th>
</tr>
</thead>
<tbody>
<tr>
<td>color</td>
<td><strong>red</strong>, <strong>blue</strong>, <strong>green</strong>, <strong>purple</strong>, <strong>pink</strong>, <strong>orange</strong> or just no value for <strong>grey</strong></td>
</tr>
<tr>
<td>class</td>
<td><strong>default</strong>, <strong>primary</strong>, <strong>success</strong>, <strong>info</strong>, <strong>warning</strong>, <strong>danger</strong></td>
</tr>
<tr>
<td>icon-choices</td>
<td><strong>icon</strong> (only available for part of fontawesome icons), <strong>no-icon</strong></td>
</tr>
<tr>
<td>style</td>
<td><strong>simple</strong>, <strong>modern</strong>, <strong>flat</strong>, <strong>disabled</strong></td>
</tr>
</tbody>
</table>
<h2 id="Style"><a class="header-anchor" href="#Style">🔗</a>Style</h2>
<h3 id="Style-flat"><a class="header-anchor" href="#Style-flat">🔗</a>Style: <code>flat</code></h3>
<h4 id="Without-Content"><a class="header-anchor" href="#Without-Content">🔗</a>Without Content</h4>
<p>The original version is <code>class = "note flat"</code>.</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note flat"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<div class="note flat"></div>
<p>You can see grey (I think it’s grey) color ribbon appear after you execute your code.</p>
<h4 id="Add-Text"><a class="header-anchor" href="#Add-Text">🔗</a>Add Text</h4>
<p>Then let’s increase some texts.</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note flat"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<div class="note flat"><p>Hello World!</p></div>
<p>Actually, the result is quite similar to the Markdown quotation on its original renderer.</p>
<h4 id="Change-Color"><a class="header-anchor" href="#Change-Color">🔗</a>Change Color</h4>
<p>Let’s change the color of the text box.</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note blue flat"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello World! But in blue background.<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<div class="note blue flat"><p>Hello World! But in blue background.</p></div>
<p>It looks better compared to the original version!</p>
<h4 id="Add-Emoji-🥰"><a class="header-anchor" href="#Add-Emoji-🥰">🔗</a>Add Emoji 🥰</h4>
<p>We can still make more changes to it like add some emojis.</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note blue flat"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>:sunglasses:Hello World in blue background with emoji.:cowboy_hat_face:<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<div class="note blue flat"><p><span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>Hello World in blue background with emoji.<span class="github-emoji"><span>🤠</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f920.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p></div>
<h4 id="Add-Icon"><a class="header-anchor" href="#Add-Icon">🔗</a>Add Icon</h4>
<p>Alright, it seems to be the end of that part. However, did you notice the empty space between your beginning of text and the beginning of the text box. We can add a icon here.</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note green icon flat"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"note-icon fas fa-rocket"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>:point_left:Green rocket is on the left.<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<div class="note green icon flat"><i class="note-icon fas fa-rocket"></i><p><span class="github-emoji"><span>👈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f448.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>Green rocket is on the left.</p></div>
<p>The color of the icon is the same as the text box.</p>
<p>If you don’t like the icon, and don’t want there’s a waste of space in the text box, that’s also fine.</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note green no-icon flat"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>:disappointed:No icon here.<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<div class="note green no-icon flat"><p><span class="github-emoji"><span>😞</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f61e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>No icon here.</p></div>
<h4 id="Some-Other-Colors"><a class="header-anchor" href="#Some-Other-Colors">🔗</a>Some Other Colors</h4>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note orange icon flat"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"note-icon fas fa-magic"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Do something <span class="tag">&lt;<span class="name">strong</span>&gt;</span>WISELY<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note red icon flat"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"note-icon fa-brands fa-github"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>First </span><br><span class="line">        <span class="tag">&lt;<span class="name">code</span>&gt;</span>git add .<span class="tag">&lt;/<span class="name">code</span>&gt;</span>, then </span><br><span class="line">        <span class="tag">&lt;<span class="name">code</span>&gt;</span>git commit -m"xxx"<span class="tag">&lt;/<span class="name">code</span>&gt;</span>, finally </span><br><span class="line">        <span class="tag">&lt;<span class="name">code</span>&gt;</span>git push<span class="tag">&lt;/<span class="name">code</span>&gt;</span>.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note purple icon flat"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"note-icon fa-solid fa-apple-whole"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Alright, do you like purple?<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note pink icon flat"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"note-icon fa-solid fa-anchor"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Pink color looks so cute.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<p>The results are shown below 👇.</p>
<div class="note orange icon flat"><i class="note-icon fas fa-magic"></i><p>Do something <strong>WISELY</strong></p></div>
<div class="note red icon flat">
    <i class="note-icon fa-brands fa-github"></i>
    <p>First 
        <code>git add .</code>, then 
        <code>git commit -m"xxx"</code>, finally 
        <code>git push</code>.
    </p>
</div>
<div class="note purple icon flat">
    <i class="note-icon fa-solid fa-apple-whole"></i>
    <p>Alright, do you like purple?</p>
</div>
<div class="note pink icon flat">
    <i class="note-icon fa-solid fa-anchor"></i>
    <p>Pink color looks so cute.</p>
</div>
<h3 id="Style-simple"><a class="header-anchor" href="#Style-simple">🔗</a>Style: <code>simple</code></h3>
<p>I will use the same content in the <strong>Style: <code>flat</code></strong> section for the comparison.</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note simple"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note blue no-icon simple"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>😎Hello World in blue background with emoji. (Actually, there's no more blue background anymore.:cry:)<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note green icon simple"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"note-icon fas fa-rocket"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>👈Green rocket is on the left.<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note orange icon simple"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"note-icon fas fa-magic"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Do something <span class="tag">&lt;<span class="name">strong</span>&gt;</span>WISELY<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note red icon simple"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"note-icon fa-brands fa-github"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>First </span><br><span class="line">        <span class="tag">&lt;<span class="name">code</span>&gt;</span>git add .<span class="tag">&lt;/<span class="name">code</span>&gt;</span>, then </span><br><span class="line">        <span class="tag">&lt;<span class="name">code</span>&gt;</span>git commit -m"xxx"<span class="tag">&lt;/<span class="name">code</span>&gt;</span>, finally </span><br><span class="line">        <span class="tag">&lt;<span class="name">code</span>&gt;</span>git push<span class="tag">&lt;/<span class="name">code</span>&gt;</span>.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note purple icon simple"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"note-icon fa-solid fa-apple-whole"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Alright, do you like purple?<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note pink icon simple"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"note-icon fa-solid fa-anchor"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Pink color looks so cute.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<div class="note simple"><p>Hello World!</p></div>
<div class="note blue no-icon simple"><p>😎Hello World in blue background with emoji. (Actually, there's no more blue background anymore.<span class="github-emoji"><span>😢</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>)</p></div>
<div class="note green icon simple"><i class="note-icon fas fa-rocket"></i><p>👈Green rocket is on the left.</p></div>
<div class="note orange icon simple"><i class="note-icon fas fa-magic"></i><p>Do something <strong>WISELY</strong></p></div>
<div class="note red icon simple">
    <i class="note-icon fa-brands fa-github"></i>
    <p>First 
        <code>git add .</code>, then 
        <code>git commit -m"xxx"</code>, finally 
        <code>git push</code>.
    </p>
</div>
<div class="note purple icon simple">
    <i class="note-icon fa-solid fa-apple-whole"></i>
    <p>Alright, do you like purple?</p>
</div>
<div class="note pink icon simple">
    <i class="note-icon fa-solid fa-anchor"></i>
    <p>Pink color looks so cute.</p>
</div>
<p>It looks much simpler and cleaner.</p>
<h3 id="Style-modern"><a class="header-anchor" href="#Style-modern">🔗</a>Style: <code>modern</code></h3>
<p>The <code>modern</code> style is close to the <code>flat</code> style. The color of your text will change to the same color as the background.</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note modern"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note blue no-icon modern"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>😎Hello World in blue background with emoji. (Actually, there's no more blue background anymore.:cry:)<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note green icon modern"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"note-icon fas fa-rocket"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>👈Green rocket is on the left.<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note orange icon modern"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"note-icon fas fa-magic"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Do something <span class="tag">&lt;<span class="name">strong</span>&gt;</span>WISELY<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note red icon modern"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"note-icon fa-brands fa-github"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>First </span><br><span class="line">        <span class="tag">&lt;<span class="name">code</span>&gt;</span>git add .<span class="tag">&lt;/<span class="name">code</span>&gt;</span>, then </span><br><span class="line">        <span class="tag">&lt;<span class="name">code</span>&gt;</span>git commit -m"xxx"<span class="tag">&lt;/<span class="name">code</span>&gt;</span>, finally </span><br><span class="line">        <span class="tag">&lt;<span class="name">code</span>&gt;</span>git push<span class="tag">&lt;/<span class="name">code</span>&gt;</span>.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note purple icon modern"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"note-icon fa-solid fa-apple-whole"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Alright, do you like purple?<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note pink icon modern"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"note-icon fa-solid fa-anchor"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Pink color looks so cute.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<div class="note modern"><p>Hello World!</p></div>
<div class="note blue no-icon modern"><p>😎Hello World in blue background with emoji. (Actually, there's no more blue background anymore.<span class="github-emoji"><span>😢</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>)</p></div>
<div class="note green icon modern"><i class="note-icon fas fa-rocket"></i><p>👈Green rocket is on the left.</p></div>
<div class="note orange icon modern"><i class="note-icon fas fa-magic"></i><p>Do something <strong>WISELY</strong></p></div>
<div class="note red icon modern">
    <i class="note-icon fa-brands fa-github"></i>
    <p>First 
        <code>git add .</code>, then 
        <code>git commit -m"xxx"</code>, finally 
        <code>git push</code>.
    </p>
</div>
<div class="note purple icon modern">
    <i class="note-icon fa-solid fa-apple-whole"></i>
    <p>Alright, do you like purple?</p>
</div>
<div class="note pink icon modern">
    <i class="note-icon fa-solid fa-anchor"></i>
    <p>Pink color looks so cute.</p>
</div>
<h3 id="style-disabled"><a class="header-anchor" href="#style-disabled">🔗</a>style: <code>disabled</code></h3>
<p>No background, the simplest version.</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note blue no-icon disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>😎Hello World in blue background with emoji. (Actually, there's no more blue background anymore.:cry:)<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note green icon disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"note-icon fas fa-rocket"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>👈Green rocket is on the left.<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note orange icon disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"note-icon fas fa-magic"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Do something <span class="tag">&lt;<span class="name">strong</span>&gt;</span>WISELY<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note red icon disabled"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"note-icon fa-brands fa-github"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>First </span><br><span class="line">        <span class="tag">&lt;<span class="name">code</span>&gt;</span>git add .<span class="tag">&lt;/<span class="name">code</span>&gt;</span>, then </span><br><span class="line">        <span class="tag">&lt;<span class="name">code</span>&gt;</span>git commit -m"xxx"<span class="tag">&lt;/<span class="name">code</span>&gt;</span>, finally </span><br><span class="line">        <span class="tag">&lt;<span class="name">code</span>&gt;</span>git push<span class="tag">&lt;/<span class="name">code</span>&gt;</span>.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note purple icon disabled"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"note-icon fa-solid fa-apple-whole"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Alright, do you like purple?<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note pink icon disabled"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"note-icon fa-solid fa-anchor"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Pink color looks so cute.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<div class="note disabled"><p>Hello World!</p></div>
<div class="note blue no-icon disabled"><p>😎Hello World in blue background with emoji. (Actually, there's no more blue background anymore.<span class="github-emoji"><span>😢</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>)</p></div>
<div class="note green icon disabled"><i class="note-icon fas fa-rocket"></i><p>👈Green rocket is on the left.</p></div>
<div class="note orange icon disabled"><i class="note-icon fas fa-magic"></i><p>Do something <strong>WISELY</strong></p></div>
<div class="note red icon disabled">
    <i class="note-icon fa-brands fa-github"></i>
    <p>First 
        <code>git add .</code>, then 
        <code>git commit -m"xxx"</code>, finally 
        <code>git push</code>.
    </p>
</div>
<div class="note purple icon disabled">
    <i class="note-icon fa-solid fa-apple-whole"></i>
    <p>Alright, do you like purple?</p>
</div>
<div class="note pink icon disabled">
    <i class="note-icon fa-solid fa-anchor"></i>
    <p>Pink color looks so cute.</p>
</div>
<h2 id="Class"><a class="header-anchor" href="#Class">🔗</a>Class</h2>
<p>You can change the color for the different classes, but the icon in the classes will not change as the color changes. So I don’t encourage you to change the color of the classes, if you still want to do so, try to use the <code>class = "note [color] [icon] [style]"</code> instead.</p>
<h3 id="Class-default"><a class="header-anchor" href="#Class-default">🔗</a>Class: <code>default</code></h3>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note default flat"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>It is the default class.<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<div class="note default flat"><p>It is the default class.</p></div>
<h3 id="Class-primary"><a class="header-anchor" href="#Class-primary">🔗</a>Class: <code>primary</code></h3>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note primary flat"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>It is the primary class.<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<div class="note primary flat"><p>It is the primary class.</p></div>
<h3 id="Class-success"><a class="header-anchor" href="#Class-success">🔗</a>Class: <code>success</code></h3>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note success flat"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>It is the success class.<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<div class="note success flat"><p>It is the success class.</p></div>
<h3 id="Class-info"><a class="header-anchor" href="#Class-info">🔗</a>Class: <code>info</code></h3>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note info flat"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>It is the info class.<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<div class="note info flat"><p>It is the info class.</p></div>
<h3 id="Class-warning"><a class="header-anchor" href="#Class-warning">🔗</a>Class: <code>warning</code></h3>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note warning flat"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>It is the warning class.<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<div class="note warning flat"><p>It is the warning class.</p></div>
<p>Personally, it seems to be more persuasive to use the red color to show the warning.</p>
<p>Maybe you can try</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note red icon flat"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"note-icon fa-solid fa-circle-exclamation"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Strong warning is always in red.<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<div class="note red icon flat"><i class="note-icon fa-solid fa-circle-exclamation"></i><p>Strong warning is always in red.</p></div>
<h3 id="Class-danger"><a class="header-anchor" href="#Class-danger">🔗</a>Class: <code>danger</code></h3>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note danger flat"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>It is the danger class.<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<div class="note danger flat"><p>It is the danger class.</p></div>
<h1>In The End</h1>
<p>That’s’ all for this post, if you are using the hexo-butterfly theme, hope the blog will help you. And in the future I will try to make the tag plugins available in my way. Thanks for your reading.</p>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
</search>
